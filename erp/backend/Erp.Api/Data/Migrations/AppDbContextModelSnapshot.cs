// <auto-generated />
using System;
using Erp.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Erp.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.19");

            modelBuilder.Entity("Erp.Api.Data.Timesheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Week")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Year", "Week")
                        .IsUnique();

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("Erp.Api.Data.TimesheetRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Friday")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Monday")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectOrTask")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saturday")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Sunday")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Thursday")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TimesheetId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Tuesday")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Wednesday")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TimesheetId");

                    b.ToTable("TimesheetRows");
                });

            modelBuilder.Entity("Erp.Api.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SupervisorRank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Erp.Api.Data.Timesheet", b =>
                {
                    b.HasOne("Erp.Api.Data.User", "User")
                        .WithMany("Timesheets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Erp.Api.Data.TimesheetRow", b =>
                {
                    b.HasOne("Erp.Api.Data.Timesheet", "Timesheet")
                        .WithMany("Rows")
                        .HasForeignKey("TimesheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Timesheet");
                });

            modelBuilder.Entity("Erp.Api.Data.Timesheet", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("Erp.Api.Data.User", b =>
                {
                    b.Navigation("Timesheets");
                });
#pragma warning restore 612, 618
        }
    }
}
